// The Fibonacci sequence is defined by the recurrence relation:

// Fn = Fn−1 + Fn−2, where F1 = 1 and F2 = 1.
// Hence the first 12 terms will be:

// F1 = 1
// F2 = 1
// F3 = 2
// F4 = 3
// F5 = 5
// F6 = 8
// F7 = 13
// F8 = 21
// F9 = 34
// F10 = 55
// F11 = 89
// F12 = 144
// The 12th term, F12, is the first term to contain three digits.

// What is the index of the first term in the Fibonacci sequence to contain 1000 digits?

var thousand = () => {
	let n1 = 1;
	let n2 = 1;
	let bool = true;
	let index = 2;

	let digits = Math.pow(10, 999);
	console.log(digits);
	// while (n1 < digits && n2 < digits) {
	// 	let newSum = n1 + n2;
	// 	bool ? n1 = newSum : n2 = newSum;
	// 	bool = !bool;
	// 	index++;
	// }


	return index;
}